@using Microsoft.AspNetCore.Identity
@model BTL_WEBNC.Models.ViewModels.CartDetailProductModel

@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "Gi·ªè h√†ng c·ªßa b·∫°n";
}

<div class="container mt-4">
    <h2 class="mb-5">üõí Gi·ªè h√†ng c·ªßa b·∫°n</h2>

    @if (Model == null || !Model.CartDetails.Any())
    {
        <div class="alert alert-warning">Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng.</div>
    }
    else
    {
        <table class="table table-bordered">
            <thead class="bg-white">
                <tr>
                    <th width="5%"><input type="checkbox" id="select-all"></th>
                    <th width="40%">S·∫£n ph·∫©m</th>
                    <th width="15%" class="text-center">ƒê∆°n gi√°</th>
                    <th width="15%" class="text-center">S·ªë l∆∞·ª£ng</th>
                    <th width="15%" class="text-center">Th√†nh ti·ªÅn</th>
                    <th width="10%" class="text-center">Thao t√°c</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.CartDetails)
                {
                    <tr>
                        <td>
                            <input type="checkbox" class="select-item" data-id="@item.CartDetailId" data-price="@item.ProductPrice" checked>
                        </td>
                        <td>
                            <div class="d-flex">
                                <img src="@item.ImageUrl" alt="@item.ProductName" class="img-thumbnail" style="width: 80px; height: 80px; object-fit: cover;">
                                <div class="ms-3">
                                    <p class="fw-bold mb-1">@item.ProductName</p>
                                </div>
                            </div>
                        </td>
                        <td class="text-center">@item.ProductPrice.ToString("N0") ƒë</td>
                        <td>
                            <div class="d-flex justify-content-start">
                                <button class="btn btn-outline-secondary btn-decrease" data-id="@item.CartDetailId" data-type="minus">-</button>
                                <span class="form-control text-center mx-2 quantity-display" style="width: 50px;">@item.Quantity</span>
                                <button class="btn btn-outline-secondary btn-increase" data-id="@item.CartDetailId" data-type="plus">+</button>
                            </div>
                        </td>
                        <td class="subtotal fw-bold text-center">@((item.ProductPrice * item.Quantity).ToString("N0")) ƒë</td>
                        <td>
                            <button class="btn btn-link text-danger remove-item" data-id="@item.CartDetailId" data-userID="@UserManager.GetUserId(User)">X√≥a</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="d-flex justify-content-between align-items-center">
            <button class="btn btn-danger btn-sm" id="remove-selected">üóë X√≥a m·ª•c ƒë√£ ch·ªçn</button>
            <h4 class="fw-bold">T·ªïng ti·ªÅn: <span id="total-price" class="text-danger">0 ƒë</span></h4>
            <button class="btn btn-success" id="checkout-btn" disabled>üí≥ Thanh to√°n ngay</button>
        </div>
        <div class="mt-5">
            <h4 class="text-uppercase">C√≥ th·ªÉ b·∫°n c≈©ng th√≠ch</h4>
            <div class="row g-4 mt-1 mb-5">
                @foreach(var itemproduct in Model.ProductCategory){
                        <div class="product-card">
                            <a class="home-product-item" asp-action="ProductDetail" asp-controller="Home" asp-route-productId="@itemproduct.Product_Id">
                                <div class="home-product-item__img" style="background-image: url(@itemproduct.Images);"></div>
                                <h4 class="home-product-item__name">@itemproduct.Name</h4>
                                <div class="home-product-item__price">
                                    <span class="home-product-item__price-old">@itemproduct.Price.ToString("N0")ƒë</span>
                                    <span class="home-product-item__price-current">999.000ƒë</span>
                                </div>
                                <div class="home-product-item__action">
                                    <span class="home-product-item__like">
                                        <i class="far fa-heart"></i>
                                    </span>
                                    <div class="home-product-item__rating">
                                        <i class="fas fa-star text-warning"></i>
                                        <i class="fas fa-star text-warning"></i>
                                        <i class="fas fa-star text-warning"></i>
                                        <i class="fas fa-star text-warning"></i>
                                        <i class="fas fa-star"></i>
                                    </div>
                                    <span class="home-product-item__sold">88 ƒë√£ b√°n</span>
                                </div>
                                <div class="home-product-item__origin">
                                    <span class="home-product-item__brand">Whoo</span>
                                    <span class="home-product-item__origin-name">H√† N·ªôi</span>
                                </div>
                                <div class="home-product-item__sale-off">
                                    <span class="home-product-item__sale-off-percent">43%</span>
                                    <span class="home-product-item__sale-off-label">SALE</span>
                                </div>
                            </a>
                        </div>
                }
            </div>
        </div>
    }
</div>

<div id="alert-message" class="alert position-fixed top-10 end-0 translate-middle-y mt-3 d-flex align-items-center justify-content-between px-3 py-2 rounded shadow-lg d-none">
    <span id="alert-text"></span>
    <button type="button" class="btn-close" aria-label="Close" onclick="closeAlert()"></button>
</div>
@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        function updateTotalPrice() {
            let total = 0;
            document.querySelectorAll(".select-item:checked").forEach(checkbox => {
                let row = checkbox.closest("tr");
                let price = parseInt(row.querySelector(".subtotal").textContent.replace(/\D/g, ""));
                total += price;
            });

            document.getElementById("total-price").textContent = total.toLocaleString("vi-VN") + " ƒë";
            document.getElementById("checkout-btn").disabled = total === 0;
        }

        document.addEventListener("DOMContentLoaded", function () {
            updateTotalPrice();

            // Ch·ªçn/B·ªè ch·ªçn t·∫•t c·∫£ s·∫£n ph·∫©m
            document.getElementById("select-all").addEventListener("change", function () {
                let checkboxes = document.querySelectorAll(".select-item");
                checkboxes.forEach(cb => cb.checked = this.checked);
                updateTotalPrice();
            });

            // Khi ch·ªçn t·ª´ng s·∫£n ph·∫©m
            document.querySelectorAll(".select-item").forEach(checkbox => {
                checkbox.addEventListener("change", updateTotalPrice);
            });

            // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m
            document.querySelectorAll(".quantity-input").forEach(input => {
                input.addEventListener("change", function () {
                    let cartDetailId = this.getAttribute("data-id");
                    let newQuantity = parseInt(this.value);

                    if (newQuantity < 1) {
                        this.value = 1;
                        newQuantity = 1;
                    }

                    fetch(`/Cart/UpdateQuantity?cartDetailId=${cartDetailId}&quantity=${newQuantity}`, { method: "POST" })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                this.closest("tr").querySelector(".subtotal").textContent = (data.newTotal).toLocaleString("vi-VN") + " ƒë";
                                updateTotalPrice();
                            }
                        });
                });
            });
            
            function updateTotal(cartDetailId, newQuantity) {
                let row = $(`button[data-id='${cartDetailId}']`).closest("tr");
                let priceText = row.find("td:nth-child(3)").text(); // L·∫•y gi√° t·ª´ c·ªôt ƒê∆°n gi√° (c·ªôt th·ª© 3)
                let price = parseFloat(priceText.replace(/[^\d]/g, '')); // Lo·∫°i b·ªè k√Ω t·ª± kh√¥ng ph·∫£i s·ªë

                let newTotal = newQuantity * price; // T√≠nh th√†nh ti·ªÅn

                row.find(".quantity-display").text(newQuantity);
                row.find(".subtotal").text(newTotal.toLocaleString("vi-VN") + " ƒë");
                updateTotalPrice();
            }

            // C·∫≠p nh·∫≠t l·∫°i s·ªë l∆∞·ª£ng h√†ng trong gi·ªè
            let userId = document.querySelector(".remove-item").getAttribute("data-userID");
            function updateCartCount() {
                $.get(`/Home/GetCartCount?userId=${encodeURIComponent(userId)}`, function (data) {
                    $("#cart-count").text(data.count);
                }).fail(function () {
                    console.error("Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu gi·ªè h√†ng.");
                });
            }
            $(".btn-increase").click(function () {
                var cartDetailId = $(this).data("id");
                $.post('/Cart/IncreaseQuantity', { cartDetailId: cartDetailId }, function (response) {
                    if (response.success) {
                        updateTotal(cartDetailId, response.newQuantity);
                    }
                });
            });

            $(".btn-decrease").click(function () {
                var cartDetailId = $(this).data("id");
                let row = $(this).closest("tr");
                let quantity = parseInt(row.find(".quantity-display").text()); 

                if (quantity <= 1) {
                    return; // Kh√¥ng gi·∫£m d∆∞·ªõi 1
                }
                $.post('/Cart/DecreaseQuantity', { cartDetailId: cartDetailId }, function (response) {
                    if (response.success) {
                        updateTotal(cartDetailId, response.newQuantity);
                    }
                });
            });
            // X√≥a m·ªôt s·∫£n ph·∫©m
            $(document).on("click", ".remove-item", function () {
                let cartDetailId = $(this).data("id");
                let row = $(this).closest("tr");

                if (!confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a s·∫£n ph·∫©m n√†y kh·ªèi gi·ªè h√†ng?")) {
                    return;
                }

                $.ajax({
                    url: "/Cart/RemoveProductCart",
                    type: "POST",   
                    data: { cartDetailId: cartDetailId },
                    success: function (response) {
                        if (response.success) {
                            row.fadeOut(300, function () {
                                $(this).remove();
                                showMessage("S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c x√≥a kh·ªèi gi·ªè h√†ng!", "success");
                                updateTotalPrice();
                                updateCartCount();
                            });
                        } else {
                            showMessage("X√≥a s·∫£n ph·∫©m th·∫•t b·∫°i!", "error");
                        }
                    },
                    error: function () {
                        showMessage("ƒê√£ x·∫£y ra l·ªói!", "error");
                    }
                });
            });

            // X√≥a nhi·ªÅu s·∫£n ph·∫©m ƒë√£ ch·ªçn
            document.getElementById("remove-selected").addEventListener("click", function () {
                let selectedItems = document.querySelectorAll(".select-item:checked");
                if (selectedItems.length === 0) return;

                let selectedIds = Array.from(selectedItems).map(cb => cb.getAttribute("data-id"));

                fetch(`/Cart/RemoveMultiple`, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ cartDetailIds: selectedIds })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        selectedItems.forEach(cb => cb.closest("tr").remove());
                        updateTotalPrice();
                    }
                });
            });
        });
        let alertTimeout;

        function showMessage(message, type) {
            var alertBox = $("#alert-message");
            $("#alert-text").text(message);

            alertBox.removeClass("alert-success alert-danger d-none") // X√≥a class ·∫©n
                    .addClass(type === "success" ? "alert-success" : "alert-danger");

            alertBox.css("display", "block").addClass("show-alert");

            clearTimeout(alertTimeout);

            alertTimeout = setTimeout(function () {
                closeAlert();
            }, 3000);
        }

        function closeAlert() {
            var alertBox = $("#alert-message");
            alertBox.removeClass("show-alert"); 
            setTimeout(() => {
                alertBox.fadeOut(300, function () {
                    $(this).addClass("d-none"); 
                });
            }, 200);
        }
    </script>
}

<style>
    #alert-message {
        position: fixed;
        top: 20px;
        right: -300px;
        min-width: 250px;
        max-width: 350px;
        background-color: white;
        border-left: 5px solid;
        z-index: 1050;
        transition: right 0.5s ease-in-out;
        display: none; 
    }

    .alert-success {
        border-color: #28a745;
        color: #155724;
        background-color: #d4edda;
    }

    .alert-danger {
        border-color: #dc3545;
        color: #721c24;
        background-color: #f8d7da;
    }

    .show-alert {
        right: 20px !important;
    }
</style>
